#pragma once
#include "source2sdk/server/CPointEntity.hpp"
#include "source2sdk/source2gen.hpp"
#include <cstddef>
#include <cstdint>

// /////////////////////////////////////////////////////////////
// Module: server
// Created using source2gen - github.com/neverlosecc/source2gen
// /////////////////////////////////////////////////////////////

namespace source2sdk::server
{
    // Registered alignment: 0x8
    // Alignment: 0x8
    // Standard-layout class: false
    // Size: 0x500
    // Has VTable
    // Construct allowed
    // MClassHasEntityLimitedDataDesc
    // MNetworkAssumeNotNetworkable
    #pragma pack(push, 1)
    class CMapInfo : public server::CPointEntity
    {
    public:
        int32_t m_iBuyingStatus; // 0x4e0        
        float m_flBombRadius; // 0x4e4        
        int32_t m_iPetPopulation; // 0x4e8        
        bool m_bUseNormalSpawnsForDM; // 0x4ec        
        bool m_bDisableAutoGeneratedDMSpawns; // 0x4ed        
        [[maybe_unused]] std::uint8_t pad_0x4ee[0x2]; // 0x4ee
        float m_flBotMaxVisionDistance; // 0x4f0        
        int32_t m_iHostageCount; // 0x4f4        
        bool m_bFadePlayerVisibilityFarZ; // 0x4f8        
        bool m_bRainTraceToSkyEnabled; // 0x4f9        
        [[maybe_unused]] std::uint8_t pad_0x4fa[0x6];
        
        // Datamap fields:
        // int32_t InputFireWinCondition; // 0x0
    };
    #pragma pack(pop)
    
    // Cannot assert offsets of fields in CMapInfo because it is not a standard-layout class
    static_assert(sizeof(CMapInfo) == 0x500);
};
